#!/bin/sh
# NAT instance variables
# Other instance's IP to ping and route to grab if other node goes down
IP_eth0=`facter ipaddress_eth0`
IP_eth0_1=`facter ipaddress_eth0_1`
NETWORK_NAT=``
NAT_ID=i-dc419193
NAT_RT_ID=rtb-66f8f10d
My_RT_ID=rtb-66f8f10d

# Region
EC2_URL=https://ec2.eu-west-1.amazonaws.com

# Health Check variables
Num_Pings=3
Ping_Timeout=1
Wait_Between_Pings=2
Wait_for_Instance_Stop=60
Wait_for_Instance_Start=300

# Load credentials
. /etc/profile.d/aws-apitools-common.sh

# Get this instance's ID
Instance_ID=`/usr/bin/curl --silent http://169.254.169.254/latest/meta-data/instance-id`

# Get the other NAT instance's IP
NAT_IP=`/usr/bin/ec2-describe-instances $NAT_ID -U $EC2_URL | grep INSTANCE | awk '{print $15}'`
echo `date` "-- Starting NAT monitor"
echo `date` "-- Adding this instance to $My_RT_ID default route on start"
/usr/bin/ec2-replace-route $NAT_ID -r 0.0.0.0/0 -i $Instance_ID -U $EC2_URL

# If replace-route failed, then the route might not exist
if [ "$?" != "0" ]; then
   /usr/bin/ec2-create-route $My_RT_ID -r 0.0.0.0/0 -i $Instance_ID -U $EC2_URL
fi
while [ . ]; do

  # Check health of other NAT instance
  pingresult=`ping -c $Num_Pings -W $Ping_Timeout $NAT_IP | grep time= | wc -l`

  # Check to see if any of the health checks succeeded, if not
  echo $pingresult
  if [ $pingresult = 0 ]; then

    # Set HEALTHY variables to unhealthy (0)
    ROUTE_HEALTHY=0
    NAT_HEALTHY=0
    STOPPING_NAT=0

    # NAT instance is unhealthy, loop while we try to fix it
    while [ "$NAT_HEALTHY" = "0" ]; do
      if [ "$ROUTE_HEALTHY" = "0" ]; then
        echo `date` "-- Other NAT heartbeat failed, taking over $NAT_RT_ID default route"
        /usr/bin/ec2-replace-route $NAT_RT_ID -r 0.0.0.0/0 -i $Instance_ID -U $EC2_URL
        ROUTE_HEALTHY=1
      fi
      # Check NAT state to see if we should stop it or start it again
      # Need to make stuff dynamic here
    if [ "$STOPPING_NAT" = "0" ]; then
          echo `date` "-- Other NAT instance $NAT_STATE, attempting to stop"
      /usr/bin/ec2-stop-instances $NAT_ID -U $EC2_URL
      /usr/bin/ec2-associate-address -i i-13a0185c -p $IP_eth0_1 -a eipalloc-fe228995 --region eu-west-1 --allow-reassociation
      sudo iptables -t nat -I POSTROUTING -s $IP_eth0 -p tcp -j SNAT --to $IP_eth0_1
      sudo iptables -t nat -I POSTROUTING -s $NETWORK_NAT -p tcp -j SNAT --to $IP_eth0_1
      STOPPING_NAT=1
    fi
        sleep $Wait_for_Instance_Stop
    done
  else
    sleep $Wait_Between_Pings
  fi
done
